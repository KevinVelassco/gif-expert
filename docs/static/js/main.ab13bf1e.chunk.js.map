{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","catgs","className","type","value","onChange","target","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getGifs","then","imgs","GifGridItem","src","alt","GifGrid","GifExpertApp","categories","setCategoties","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEwB,KAAtBJ,EAAWK,SAEfP,GAAc,SAAAQ,GAAK,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,MAId,SACI,uBAAOM,UAAU,yCAAyCC,KAAK,OAC3DC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,2ECRxB,WAAuBG,GAAvB,uBAAAC,EAAA,6DACGC,EADH,0FAC4FC,UAAUH,GADtG,sBAGoBI,MAAMF,GAH1B,cAGGG,EAHH,gBAKoBA,EAASC,OAL7B,uBAKKC,EALL,EAKKA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC1BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnC,kBAaIM,GAbJ,6C,sBCGA,IAAMO,EAAe,SAACf,GAAc,IAAD,EACZb,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,YDTP,SAAP,mCCUQC,CAAQpB,GACHqB,MAAK,SAAAC,GACFJ,EAAS,CACLX,KAAMe,EACNN,SAAS,SAGtB,CAAChB,IAEGiB,GCjBEM,EAAc,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,qBAAKP,UAAU,wCAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,qBAAK6B,IAAKtB,EAAKuB,IAAKb,EAAOjB,UAAU,mBCHxC+B,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EAEHe,EAAaf,GAAjCa,EAFuB,EAE7BN,KAAcS,EAFe,EAEfA,QAEtB,OACI,qCACI,mBAAGrB,UAAU,wDAAb,SACI,sBAAMA,UAAU,iBAAhB,SAAkCK,MAGpCgB,GAAW,mBAAGrB,UAAU,2CAAb,qBAEb,qBAAKA,UAAU,QAAf,SAEQkB,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCfxBgB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,UAFhB,mBAEvByC,EAFuB,KAEXC,EAFW,KAI9B,OACI,iCACI,mCACI,oBAAIlC,UAAU,yCAAd,uBACA,cAAC,EAAD,CAAaT,cAAe2C,OAEhC,kCAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCTtC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ab13bf1e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim() === \"\") return;\r\n\r\n        setCategories(catgs => [inputValue, ...catgs]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input className=\"input animate__animated animate__flash\" type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export async function getGifs(category) {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ADWbaWzWxzmvj1RwlWZuVgLZIRSizaU3&q=${encodeURI(category)}&limit=12`;\r\n\r\n    const response = await fetch(url);\r\n\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }));\r\n\r\n    return gifs;\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card  animate__animated animate__flip\">\r\n            <div className=\"card__imgContainer\">\r\n                <img src={url} alt={title} className=\"card__img\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <p className=\"category_content animate__animated animate__heartBeat\">\r\n                <span className=\"category_title\">{category}</span>\r\n            </p>\r\n\r\n            { loading && <p className=\"loading animate__animated animate__flash\">loading</p>}\r\n\r\n            <div className=\"panel\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategoties] = useState(['anime']);\r\n\r\n    return (\r\n        <main>\r\n            <header>\r\n                <h1 className=\"title animate__animated animate__flash\">GifExpert</h1>\r\n                <AddCategory setCategories={setCategoties} />\r\n            </header>\r\n            <section>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport 'animate.css'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}